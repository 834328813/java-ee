#!/usr/bin/python
# -*- coding: UTF-8 -*-
import math


# 题目：有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？
# 程序分析：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去 掉不满足条件的排列。
# 程序源代码：

def test1():
    for i in range(1, 5):
        for j in range(1, 5):
            for k in range(1, 5):
                if (i != k) and (i != j) and (j != k):
                    print i, j, k


# test1()

# -------------------test2-------------------
# 题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，
# 低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，
# 可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，
# 可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？
# 程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。

def test2():
    i = int(raw_input('净利润:'))
    arr = [1000000, 600000, 400000, 200000, 100000, 0]
    rat = [0.01, 0.015, 0.03, 0.05, 0.075, 0.1]
    r = 0
    for idx in range(0, 6):
        if i > arr[idx]:
            r += (i - arr[idx]) * rat[idx]
            print (i - arr[idx]) * rat[idx]
            i = arr[idx]
            print r


# -------------------test3-------------------
# 题目：一个整数，它加上100和加上268后都是一个完全平方数，请问该数是多少？
# 程序分析：在10000以内判断，将该数加上100后再开方，加上268后再开方，如果开方后的结果满足如下条件，即是结果。请看具体分析

def test3():
    for i in range(10000):
        x = int(math.sqrt(i + 100))
        y = int(math.sqrt(i + 268))
        if (x * x == i + 100) and (y * y == i + 268):
            print i


# test3()


# -------------------test4-------------------
# 题目：输入三个整数x, y, z，请把这三个数由小到大输出。
# 程序分析：我们想办法把最小的数放到x上，先将x与y进行比较，如果x > y则将x与y的值进行交换，然后再用x与z进行比较，如果x > z则将x与z的值进行交换，这样能使x最小。

def test4():
    lst = []  # 之所以不用list，是因为list是内建函数，如果用了作变量名就不能使用这个函数了
    for i in range(3):
        x = int(raw_input("integer: "))
        lst.append(x)  # 用于在列表末尾追回新的对象

    lst.sort()
    print result


# test4()


# -------------------test5-------------------
# 题目：斐波那契数列。
# 程序分析：斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。
# 在数学上，费波那契数列是以递归的方法来定义：
# F0 = 0     (n=0)
# F1 = 1    (n=1)
# Fn = F[n-1]+ F[n-2](n=>2)

def fib(n):
    if n == 0:
        return 0
    if n == 1:
        return 1

    for i in range(n - 1):
        return fib(n - 1) + fib(n - 2)


# print (fib(5))


# -------------------test6-------------------
# 题目：将一个列表的数据复制到另一个列表中。
# 程序分析：使用列表[:]。
def test6():
    a = [1, 2, 3]
    b = a[:]
    print b


test6()
